{
	"info": {
		"_postman_id": "4fcd0cae-7ecf-4e1e-aca0-fdd1784db0e4",
		"name": "Sample Store- Dev",
		"description": "This is a sample server online store",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1.Store REST Client",
			"item": [
				{
					"name": "1.1.Store REST API DCR Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "43f04037-72aa-4105-9df1-c36b0bd2310d",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"store_rest_clientId\", jsonData.clientId);",
									"pm.globals.set(\"store_rest_clientSecret\", jsonData.clientSecret);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW4=",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"callbackUrl\": \"www.google.lk\",\n        \"clientName\": \"rest_api_store\",\n        \"owner\": \"admin\",\n        \"grantType\": \"password refresh_token\",\n        \"saasApp\": true\n}"
						},
						"url": {
							"raw": "https://dev.apim.wso2.com/client-registration/v0.15/register",
							"protocol": "https",
							"host": [
								"dev",
								"apim",
								"wso2",
								"com"
							],
							"path": [
								"client-registration",
								"v0.15",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.2.Get Token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "db51d5b6-a010-455a-b4c5-41a5ad045604",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "122a5274-84d0-4cbb-aaa7-0056b867bed7",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"store_rest_accesstoken\", jsonData.access_token);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{store_rest_clientSecret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{store_rest_clientId}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Basic ",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "text"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "apim:subscribe apim:app_manage apim:app_update apim:sub_manage",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://dev.apim.wso2.com/token",
							"protocol": "https",
							"host": [
								"dev",
								"apim",
								"wso2",
								"com"
							],
							"path": [
								"token"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "2.Create Application and Subscription",
			"item": [
				{
					"name": "2.1.Create App",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "922691c0-d890-4c04-98f2-70d6d36c33fc",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"sample_application_id\", jsonData.applicationId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{store_rest_accesstoken}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"throttlingTier\": \"Unlimited\",\n    \"description\": \"sample app description\",\n    \"name\": \"sampleapp\",\n    \"callbackUrl\": \"http://my.server.com/callback\"\n}"
						},
						"url": {
							"raw": "https://dev.apim.wso2.com/api/am/store/v0.15/applications",
							"protocol": "https",
							"host": [
								"dev",
								"apim",
								"wso2",
								"com"
							],
							"path": [
								"api",
								"am",
								"store",
								"v0.15",
								"applications"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.2.Generate Keys for Application",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b434108-16de-41b3-b54a-942a16e6553b",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"store_sample_app_clientid\", jsonData.consumerKey);",
									"pm.globals.set(\"store_sample_app_clientsecret\", jsonData.consumerSecret);",
									"pm.globals.set(\"sample_application_accesstoken\", jsonData.token.accessToken);",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{store_rest_accesstoken}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"validityTime\": \"3600\",\n  \"keyType\": \"SANDBOX\",\n  \"scopes\": [ \"am_application_scope\", \"default\" ],\n  \"grantTypesToBeSupported\": [ \"client_credentials\", \"password\" ]\n}"
						},
						"url": {
							"raw": "https://dev.apim.wso2.com/api/am/store/v1.0/applications/{{sample_application_id}}/generate-keys",
							"protocol": "https",
							"host": [
								"dev",
								"apim",
								"wso2",
								"com"
							],
							"path": [
								"api",
								"am",
								"store",
								"v1.0",
								"applications",
								"{{sample_application_id}}",
								"generate-keys"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.3.Get SampleStore API",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d17a35dd-7d80-40dd-9208-88c21e5f0d5e",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.globals.set(\"samplestore_api_id\", jsonData.list[0].id);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"SampleStore API exists\", function () {",
									"    pm.expect(jsonData.count).to.eql(1);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "61cf7dfc-e93b-4c92-9590-8505fe8448fa",
								"exec": [
									"setTimeout(function(){}, [10000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{store_rest_accesstoken}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://dev.apim.wso2.com/api/am/store/v1.0/apis?query=\"SampleStore\"",
							"protocol": "https",
							"host": [
								"dev",
								"apim",
								"wso2",
								"com"
							],
							"path": [
								"api",
								"am",
								"store",
								"v1.0",
								"apis"
							],
							"query": [
								{
									"key": "query",
									"value": "\"SampleStore\""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "2.4.Subscribe API",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3f0479b-3312-4b98-bc9b-762a79195dc8",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{store_rest_accesstoken}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"apiId\":\"{{samplestore_api_id}}\",\n\"applicationId\":\"{{sample_application_id}}\",\n\"throttlingPolicy\":\"Unlimited\",\n\"type\":\"API\"\n}"
						},
						"url": {
							"raw": "https://dev.apim.wso2.com/api/am/store/v1.0/subscriptions",
							"protocol": "https",
							"host": [
								"dev",
								"apim",
								"wso2",
								"com"
							],
							"path": [
								"api",
								"am",
								"store",
								"v1.0",
								"subscriptions"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "3.Store REST API Client",
			"item": [
				{
					"name": "3.1.Get Product List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "20ad9a31-1c64-4dc9-8fcd-a43ceb790584",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Content-Type header is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"pm.test(\"Product List is non empty\", function () {",
									"    pm.expect(jsonData.total).to.be.above(0);",
									"});",
									"",
									"var Ajv = require('ajv'),",
									"    ajv = new Ajv({logger: console}),",
									"    schema = {",
									"        \"properties\": {",
									"            \"id\": {",
									"                \"type\": \"integer\"",
									"            },",
									"            \"name\": {",
									"                \"type\": \"string\"",
									"            },",
									"            \"description\": {",
									"                \"type\" : \"string\"",
									"            },",
									"            \"price\": {",
									"                \"type\" : \"string\"",
									"            }",
									"        }",
									"    };",
									"",
									"pm.test('Product Schema is valid', function() {",
									"    jsonData.list.forEach(prod => {",
									"        pm.expect(ajv.validate(schema, prod)).to.be.true;",
									"    }",
									"    );",
									"});",
									"",
									"",
									"pm.globals.set(\"no_of_products\", jsonData.list.length);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{sample_application_accesstoken}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products?start=<string>&count=<string>&params=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "start",
									"value": "<string>"
								},
								{
									"key": "count",
									"value": "<string>"
								},
								{
									"key": "params",
									"value": "<string>"
								}
							]
						},
						"description": "Get Product List"
					},
					"response": [
						{
							"name": "OK.\nList of Products is returned.\n",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/products?start=<string>&count=<string>&params=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products"
									],
									"query": [
										{
											"key": "start",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<string>"
										},
										{
											"key": "params",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"list\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\",\n   \"description\": \"<string>\",\n   \"price\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\",\n   \"description\": \"<string>\",\n   \"price\": \"<string>\"\n  }\n ],\n \"total\": \"<long>\",\n \"offset\": \"<long>\",\n \"limit\": \"<long>\"\n}"
						}
					]
				},
				{
					"name": "3.2.Add Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0ef74d03-e7be-47c0-98e3-50663cd5af57",
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"var Ajv = require('ajv'),",
									"    ajv = new Ajv({logger: console}),",
									"    schema = {",
									"        \"properties\": {",
									"            \"id\": {",
									"                \"type\": \"integer\"",
									"            },",
									"            \"name\": {",
									"                \"type\": \"string\"",
									"            },",
									"            \"description\": {",
									"                \"type\" : \"string\"",
									"            },",
									"            \"price\": {",
									"                \"type\" : \"string\"",
									"            }",
									"        }",
									"    };",
									"",
									"pm.test('Product Schema is valid', function() {",
									"    pm.expect(ajv.validate(schema, jsonData)).to.be.true;",
									"});",
									"",
									"pm.test(\"Product Id is valid\", function () {",
									"    pm.expect(jsonData.id).to.eql(pm.globals.get(\"no_of_products\")+1);",
									"});",
									"",
									"pm.globals.set(\"newly_added_product_id\", jsonData.id);",
									"pm.globals.set(\"newly_added_product_name\", jsonData.name);",
									"pm.globals.set(\"newly_added_product_description\", jsonData.description);",
									"pm.globals.set(\"newly_added_product_price\", jsonData.price);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{sample_application_accesstoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Floral Sleeveless Blouse\",\n    \"description\": \"Womens Cotton Floral Sleeveless Blouse\",\n    \"price\": \"$99.00\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							]
						},
						"description": "Add a Product"
					},
					"response": [
						{
							"name": "Created.\nSuccessful response with the newly created object as entity in the body.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"price\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<long>\",\n \"name\": \"<string>\",\n \"description\": \"<string>\",\n \"price\": \"<string>\"\n}"
						},
						{
							"name": "Unsupported Media Type.\nThe entity of the request was in a not supported format.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"price\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products"
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<long>\",\n \"message\": \"<string>\",\n \"description\": \"<string>\"\n}"
						},
						{
							"name": "Bad Request.\nInvalid request or validation error.\n",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"price\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<long>\",\n \"message\": \"<string>\",\n \"description\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "3.3.Get Product By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6508807c-a1b1-4eae-bd57-cb590ca5855d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"var Ajv = require('ajv'),",
									"    ajv = new Ajv({logger: console}),",
									"    schema = {",
									"        \"properties\": {",
									"            \"id\": {",
									"                \"type\": \"integer\"",
									"            },",
									"            \"name\": {",
									"                \"type\": \"string\"",
									"            },",
									"            \"description\": {",
									"                \"type\" : \"string\"",
									"            },",
									"            \"price\": {",
									"                \"type\" : \"string\"",
									"            }",
									"        }",
									"    };",
									"",
									"pm.test('Product Schema is valid', function() {",
									"    pm.expect(ajv.validate(schema, jsonData)).to.be.true;",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.test(\"Product Id is valid\", function () {",
									"    pm.expect(jsonData.id).to.eql(pm.globals.get(\"newly_added_product_id\"));",
									"});",
									"",
									"pm.test(\"Product Name is valid\", function () {",
									"    pm.expect(jsonData.name).to.eql(pm.globals.get(\"newly_added_product_name\"));",
									"});",
									"",
									"pm.test(\"Product Desc is valid\", function () {",
									"    pm.expect(jsonData.description).to.eql(pm.globals.get(\"newly_added_product_description\"));",
									"});",
									"",
									"pm.test(\"Product price is valid\", function () {",
									"    pm.expect(jsonData.price).to.eql(pm.globals.get(\"newly_added_product_price\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{sample_application_accesstoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products/:productId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								":productId"
							],
							"variable": [
								{
									"id": "655e22f4-f19a-4677-a1aa-8cc32047827a",
									"key": "productId",
									"value": "{{newly_added_product_id}}",
									"type": "string"
								}
							]
						},
						"description": "Get a Product"
					},
					"response": [
						{
							"name": "OK.\nProduct is returned.\n",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/products/<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										"<string>"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<long>\",\n \"name\": \"<string>\",\n \"description\": \"<string>\",\n \"price\": \"<string>\"\n}"
						},
						{
							"name": "Not Found\nInvalid product Id.\n",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/products/<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										"<string>"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<long>\",\n \"message\": \"<string>\",\n \"description\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error\nError while getting product\n",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/products/<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										"<string>"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"<long>\",\n \"message\": \"<string>\",\n \"description\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "3.4.Delete Application",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessToken",
									"value": "{{store_rest_accesstoken}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://dev.apim.wso2.com/api/am/store/v0.15/applications/{{sample_application_id}}",
							"protocol": "https",
							"host": [
								"dev",
								"apim",
								"wso2",
								"com"
							],
							"path": [
								"api",
								"am",
								"store",
								"v0.15",
								"applications",
								"{{sample_application_id}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "5f46ae04-4c21-4dce-87b9-ebdaad51fea0",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "377431b6-8c79-423c-84bb-fd9f76ce95b7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "baf5be5e-d86a-4cb7-a4ec-1e61389fff40",
			"key": "baseUrl",
			"value": "https://dev.apim.wso2.com:8243/SampleStore/1.0.0",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}